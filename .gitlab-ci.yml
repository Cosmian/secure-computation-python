image: python:3.8-slim

stages:
  - lint
  - build
  - test

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - venv/

code_style:
  stage: lint
  before_script:
    - python --version
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
    - pip install .
  script:
    - pycodestyle cosmian_secure_computation_client/

doc_style:
  stage: lint
  before_script:
    - python --version
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
    - pip install .
  script:
    - pycodestyle cosmian_secure_computation_client/

static_analysis:
  stage: lint
  before_script:
    - python --version
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
    - pip install .
  script:
    - pylint --rcfile=setup.cfg cosmian_secure_computation_client/

type_check:
  stage: lint
  before_script:
    - python --version
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
    - pip install .
  script:
    - mypy cosmian_secure_computation_client/
  allow_failure: true

doc:
  stage: build
  before_script:
    - python --version
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements-dev.txt
  script:
    - sphinx-build docs docs/_build -E -a -W

release_wheel:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG =~ /^\d+.\d+/
  before_script:
    - python --version
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
    - pip install build twine
  script:
    - |
      if [ "$(python setup.py --version)" == "$CI_COMMIT_TAG" ]
      then
          python -m build --wheel && twine upload -u "${PYPI_USERNAME}" -p "${PYPI_PASSWORD}" dist/*
      else
          echo "Git tag version should be the same as in setup.py!"
          exit 1
      fi
  artifacts:
    paths:
      - dist/*.whl

test_e2e_dev:
  image: gitlab.cosmian.com:5000/core/secure-computation-e2e:master
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH != 'master'
  variables:
    BACKEND_BRANCH: develop
    ENCLAVE_IMAGE: enclave-http_test:latest
    PYTHON_CLIENT_BRANCH: $CI_COMMIT_REF_NAME
  tags: [sgx]
  script:
    - secure_computation_e2e

test_e2e_prod:
  image: gitlab.cosmian.com:5000/core/secure-computation-e2e:master
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH == 'master' || $CI_PIPELINE_SOURCE == 'merge_request_event'
      allow_failure: true
  variables:
    BACKEND_BRANCH: main
    ENCLAVE_IMAGE: enclave-http:latest
    PYTHON_CLIENT_BRANCH: $CI_COMMIT_REF_NAME
  tags: [sgx]
  script:
    - secure_computation_e2e
